composer toHeatLoss
  <INT"hl">
end toHeatLoss

def map: 1"y":[$IN::lines -> 1"x":[$... -> toHeatLoss]];

source find-min-loss
  @: {
    min-loss: 0"x":[0..1 -> 1"y":[1..$map::length ->
      1"x":[1..$map(first)::length ->
        ($map::length * $map(first)::length * 9)"hl"]]],
    queue: [
      {position: {x: 1"x", y: 1"y"}, direction: {x: 1"x", y: 0"y"}, heat-loss: 0"hl"},
      {position: {x: 1"x", y: 1"y"}, direction: {x: 0"x", y: 1"y"}, heat-loss: 0"hl"}
    ]
  };
  ^@.queue(first..first)... -> #
  $@.min-loss(first..last;last;last) ... -> ..=Min&{by: :(), select: :()} !

  when <{heat-loss: <..~$@.min-loss($.direction.x; $.position.y; $.position.x)>}> do
    '$@.queue::length; inc $;$#10;' -> !OUT::write
    @.min-loss($.direction.x; $.position.y; $.position.x): $.heat-loss;
    def current: $;
    def direction: {x: ($.direction.y)"x", y: ($.direction.x)"y"};

    source moves&{to:}
      @: {heat-loss: $current.heat-loss, direction: $direction,
        position: {x: $current.position.x + $to * $direction.x, y: $current.position.y + $to * $direction.y}
      };
      1..3 -> #
      when <?($@.position <{x: <..~$map(first)::first|$map(first)::last~..>}
          |{y: <..~$map::first|$map::last~..>}>)> do
        !VOID

      otherwise
        @.heat-loss: $@.heat-loss + $map($@.position.y; $@.position.x);
        $@!
        @.position.x: $@.position.x + $to * $direction.x;
        @.position.y: $@.position.y + $to * $direction.y;
    end moves

    $moves&{to: 1"1"} -> ..|@.queue: $;
    $moves&{to: -1"1"} -> ..|@.queue: $;
    ^@.queue(first..first)... -> #

  otherwise
    '$@.queue::length; not $;$#10;' -> !OUT::write
    ^@.queue(first..first)... -> #
end find-min-loss

test 'example'
  modify program
  def map: [
    '2413432311323',
    '3215453535623',
    '3255245654254',
    '3446585845452',
    '4546657867536',
    '1438598798454',
    '4457876987766',
    '3637877979653',
    '4654967986887',
    '4564679986453',
    '1224686865563',
    '2546548887735',
    '4322674655533'
  ] -> 1"y":[$... -> 1"x":[$... -> toHeatLoss]];
  end program

  assert $find-min-loss <=102"hl"> 'part 1'
end 'example'

// part 1
$find-min-loss -> !OUT::write
